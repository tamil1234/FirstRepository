
<project name="Sample usage of Salesforce Ant tasks" default="retrieveUnpackaged" basedir="." xmlns:sf="antlib:com.salesforce">
 <property file="build.properties"/>
 <property environment="env"/>
 
<!-- Retrieve an unpackaged set of metadata from your org -->
 <!-- The file unpackaged/package.xml lists what is to be retrieved -->
 <target name="retrieveUnpackaged">
 <!-- The below tag creates a new folder in your directory structure, if the folder with the same name does not exist, otherwise uses the previous folder itself -->
 <mkdir dir="retrieveUnpackaged1"/>
 
 <!-- sf:retrieve retrieves the contents into another directory. we refer the username, password, serverurl, maxPoll from build.properties file that is present -->
 <!-- In "retrieveTarget" attribute we mention the path of the folder where we want to retrieve the components -->
 <!-- In "unpackaged" attribute we mention the path of the folder where we have the package.xml file that contains the name of the components to be retrieved -->
 <sf:retrieve username="${sf.username}" password="${sf.password}" serverurl="${sf.serverurl}" maxPoll="${sf.maxPoll}" retrieveTarget="retrieveUnpackaged1" unpackaged="unpackaged/package.xml"/>
 </target>
 
 <!-- Deploy the unpackaged set of metadata retrieved with retrieveUnpackaged -->
 	<target name="deployUnpackaged">
 	 
 	<sf:deploy username="${sf.username}" password="${sf.password}" serverurl="${sf.serverurl}" maxPoll="${sf.maxPoll}" deployRoot="retrieveUnpackaged"/>
 	
 		<!-- <echo message=" ${gt.commitMessage}" />
 				<git command="add" dir="${gt.gitDirectory}">
 					<args>
 						<arg value="." />
 					 </args>
 				</git>
 				<git command="commit" dir="${gt.gitDirectory}">
 					<args>
 						<arg value="-am ${gt.commitMessage}" />
 					</args>
 				</git> -->
 			</target>
 			<!-- <macrodef name="git">
 				<attribute name="command" />
 				<attribute name="dir" />
 				<element name="args" optional="true" />
 				<sequential>
 		            <echo message="Executing Command in folder @{dir}" />
 		            <echo message="git @{command}" />
 					<exec executable="git" dir="@{dir}">
 						<arg value="@{command}" />
 						<args/>
 					</exec>
 				</sequential>
 			</macrodef> -->
 		
 	
 </project>